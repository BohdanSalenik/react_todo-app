{"version":3,"sources":["components/InputTodo.js","components/ListItem.js","components/TodoList.js","components/NotFinishedTodo.js","App.js","index.js"],"names":["InputTodo","state","title","error","handleChange","event","setState","target","value","replace","handleSubmit","preventDefault","length","todo","id","uuidv4","completed","props","addTodo","this","onSubmit","type","className","placeholder","onChange","cn","Component","ListItem","deleteTodo","toggleComplited","checked","htmlFor","onClick","TodoList","todos","handleCheckedAll","map","key","NotFinishedTodo","notFinishedTodo","App","filter","prevState","clearCompleted","changeFilter","getAttribute","preparedTodos","filterTodos","href","data-filter","selected","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ee2989f2.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\nimport { v4 as uuidv4 } from 'uuid';\n\nexport class InputTodo extends Component {\n  state = {\n    title: '',\n    error: false,\n  }\n\n  handleChange = (event) => {\n    this.setState({\n      title: event.target.value.replace(/^\\s/, ''),\n    });\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    const { title } = this.state;\n\n    if (this.state.title.length < 7) {\n      this.setState({\n        error: true,\n      });\n\n      return;\n    }\n\n    const todo = {\n      title,\n      id: uuidv4(),\n      completed: false,\n    };\n\n    this.props.addTodo(todo);\n\n    this.setState({\n      title: '',\n      error: false,\n    });\n  }\n\n  render() {\n    const { title, error } = this.state;\n\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <input\n          type=\"text\"\n          className=\"new-todo\"\n          placeholder=\"What needs to be done?\"\n          onChange={this.handleChange}\n          value={title}\n        />\n        <p className={cn('error', {\n          'error--detected': error,\n        })}\n        >\n          Enter todo length more 6 char\n        </p>\n      </form>\n    );\n  }\n}\n\nInputTodo.propTypes = {\n  addTodo: PropTypes.func.isRequired,\n};\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const ListItem = ({ todo, deleteTodo, toggleComplited }) => {\r\n  const { id, title, completed } = todo;\r\n\r\n  return (\r\n    <li>\r\n      <div className=\"view\">\r\n        <input\r\n          type=\"checkbox\"\r\n          checked={completed}\r\n          className=\"toggle\"\r\n          id={id}\r\n          onChange={toggleComplited}\r\n        />\r\n        <label htmlFor={id}>{title}</label>\r\n        <button type=\"button\" className=\"destroy\" onClick={deleteTodo} />\r\n      </div>\r\n      <input type=\"text\" className=\"edit\" />\r\n    </li>\r\n  );\r\n};\r\n\r\nListItem.propTypes = {\r\n  todo: PropTypes.shape({\r\n    title: PropTypes.string.isRequired,\r\n    id: PropTypes.string.isRequired,\r\n    completed: PropTypes.bool.isRequired,\r\n  }).isRequired,\r\n  deleteTodo: PropTypes.func.isRequired,\r\n  toggleComplited: PropTypes.func.isRequired,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { ListItem } from './ListItem';\r\n\r\nexport const TodoList = ({\r\n  todos,\r\n  deleteTodo,\r\n  toggleComplited,\r\n  handleCheckedAll,\r\n}) => (\r\n  <>\r\n    <input\r\n      type=\"checkbox\"\r\n      id=\"toggle-all\"\r\n      className=\"toggle-all\"\r\n      onClick={handleCheckedAll}\r\n    />\r\n    <label htmlFor=\"toggle-all\">Mark all as complete</label>\r\n    {todos.length > 0 && (\r\n      <ul className=\"todo-list\">\r\n        {todos.map(todo => (\r\n          <ListItem\r\n            key={todo.id}\r\n            todo={todo}\r\n            deleteTodo={() => deleteTodo(todo.id)}\r\n            toggleComplited={() => toggleComplited(todo.id)}\r\n          />\r\n        ))}\r\n      </ul>\r\n    )}\r\n  </>\r\n);\r\n\r\nTodoList.propTypes = {\r\n  todos: PropTypes.arrayOf(PropTypes.shape({\r\n    title: PropTypes.string.isRequired,\r\n    id: PropTypes.string.isRequired,\r\n    completed: PropTypes.bool.isRequired,\r\n  })).isRequired,\r\n  deleteTodo: PropTypes.func.isRequired,\r\n  toggleComplited: PropTypes.func.isRequired,\r\n  handleCheckedAll: PropTypes.func.isRequired,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const NotFinishedTodo = ({ notFinishedTodo }) => (\r\n  <span className=\"todo-count\">\r\n    {`${notFinishedTodo.length} items left`}\r\n  </span>\r\n);\r\n\r\nNotFinishedTodo.propTypes = {\r\n  notFinishedTodo: PropTypes.arrayOf(PropTypes.shape({\r\n    title: PropTypes.string.isRequired,\r\n    id: PropTypes.string.isRequired,\r\n    completed: PropTypes.bool.isRequired,\r\n  })).isRequired,\r\n};\r\n","import React, { Component } from 'react';\nimport cn from 'classnames';\nimport { InputTodo } from './components/InputTodo';\nimport { TodoList } from './components/TodoList';\nimport { NotFinishedTodo } from './components/NotFinishedTodo';\n\nconst filterTodos = (todos, filter) => {\n  switch (filter) {\n    case 'active':\n      return todos.filter(todo => todo.completed === false);\n    case 'completed':\n      return todos.filter(todo => todo.completed === true);\n    default:\n      return todos;\n  }\n};\n\nexport class App extends Component {\n  state = {\n    todos: [],\n    filter: 'all',\n  }\n\n  addTodo = (todo) => {\n    this.setState(prevState => ({\n      todos: [...prevState.todos, todo],\n    }));\n  }\n\n  deleteTodo = (id) => {\n    this.setState(prevState => ({\n      todos: prevState.todos.filter(todo => todo.id !== id),\n    }));\n  }\n\n  toggleComplited = (id) => {\n    this.setState(prevState => ({\n      todos: prevState.todos.map(todo => (\n        todo.id === id\n          ? {\n            ...todo,\n            completed: !todo.completed,\n          }\n          : todo\n      )),\n    }));\n  }\n\n  handleCheckedAll = (event) => {\n    if (event.target.checked) {\n      this.setState(prevState => ({\n        todos: prevState.todos.map(todo => ({\n          ...todo,\n          completed: true,\n        })),\n      }));\n    } else {\n      this.setState(prevState => ({\n        todos: prevState.todos.map(todo => ({\n          ...todo,\n          completed: false,\n        })),\n      }));\n    }\n  }\n\n  clearCompleted = () => {\n    this.setState(prevState => ({\n      todos: prevState.todos.filter(todo => !todo.completed),\n    }));\n  }\n\n  changeFilter = (event) => {\n    this.setState({\n      filter: event.target.getAttribute('data-filter'),\n    });\n  }\n\n  render() {\n    const { todos, filter } = this.state;\n    const notFinishedTodo = todos.filter(todo => !todo.completed);\n    const preparedTodos = filterTodos(todos, filter);\n\n    return (\n      <section className=\"todoapp\">\n        <header className=\"header\">\n          <h1>todos</h1>\n\n          <InputTodo addTodo={this.addTodo} />\n        </header>\n        <section className=\"main\">\n          <TodoList\n            todos={preparedTodos}\n            deleteTodo={this.deleteTodo}\n            toggleComplited={this.toggleComplited}\n            handleCheckedAll={this.handleCheckedAll}\n          />\n        </section>\n\n        <footer className=\"footer\">\n          <NotFinishedTodo notFinishedTodo={notFinishedTodo} />\n          <ul className=\"filters\">\n            <li>\n              <button\n                type=\"button\"\n                href=\"#/\"\n                data-filter=\"all\"\n                className={cn({ selected: filter === 'all' })}\n                onClick={this.changeFilter}\n              >\n              All\n              </button>\n            </li>\n\n            <li>\n              <button\n                type=\"button\"\n                href=\"#/active\"\n                data-filter=\"active\"\n                className={cn({ selected: filter === 'active' })}\n                onClick={this.changeFilter}\n              >\n              Active\n              </button>\n            </li>\n\n            <li>\n              <button\n                type=\"button\"\n                href=\"#/completed\"\n                data-filter=\"completed\"\n                className={cn({ selected: filter === 'completed' })}\n                onClick={this.changeFilter}\n              >\n              Completed\n              </button>\n            </li>\n          </ul>\n\n          <button\n            type=\"button\"\n            className=\"clear-completed\"\n            onClick={this.clearCompleted}\n          >\n            Clear completed\n          </button>\n        </footer>\n      </section>\n    );\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './base.scss';\r\nimport './index.scss';\r\nimport { App } from './App';\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}